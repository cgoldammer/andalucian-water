worker_processes  2;
user              www-data;

events {
    use           epoll;
    worker_connections  128;
}

error_log         logs/error.log info;

http {
    server_tokens off;
    include       mime.types;
    charset       utf-8;

    access_log    logs/access.log  combined;
    proxy_cache_path /tmp levels=1:2 keys_zone=my_cache:10m max_size=1g inactive=60m use_temp_path=off;

    server {
      autoindex on;
      listen 80;
      server_name water.chrisgoldammer.com;
      return 301 https://water.chrisgoldammer.com$request_uri;

      location /api/health {
        proxy_pass http://django:8002/api/health;
        proxy_set_header Host water.chrisgoldammer.com;
      }
    }

    server {
        server_name localhost;
        listen 80;
        listen [::]:80;

        error_page    500 502 503 504  /50x.html;
        error_log logs/error.log debug;
        root /etc/nginx/html;
        index index_prod.html;

        location      / {
            try_files $uri $uri/ /index_prod.html;
        }

        location /test/ {
            root /var/www/certbot;
        }

        location /api/health {
            proxy_pass http://django:8002/api/health;
            proxy_set_header Host water.chrisgoldammer.com;
        }

        location /api/ {
            proxy_pass http://django:8002/;
            client_max_body_size 1000k; # 413
        } 
    }

    server {
        listen 443 default_server ssl http2;
        listen [::]:443 ssl http2;

        server_name water.chrisgoldammer.com;
        ssl_certificate /etc/letsencrypt/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/privkey.pem;
        include /etc/letsencrypt/options-ssl-nginx.conf;
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

        root /etc/nginx/html;
        index index_prod.html;
        
        location      / {
            try_files $uri $uri/ /index_prod.html;
        }

        location /api/ {
            proxy_pass http://django:8002/;
            # client_max_body_size 1000k; # 413
            proxy_cache my_cache;
            proxy_cache_valid 200 302 10m;
            proxy_cache_valid 404 1m;
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        }
    }

}

